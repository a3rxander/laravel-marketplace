version: '3.8'

services:
  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: marketplace_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - marketplace

  # PHP-FPM
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketplace_php
    volumes:
      - ./src:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - marketplace
    depends_on:
      - mysql
      - redis
      - elasticsearch

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: marketplace_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_DATABASE:-marketplace}
      MYSQL_USER: ${DB_USERNAME:-marketplace}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - marketplace

  # Redis for Cache and Sessions
  redis:
    image: redis:alpine
    container_name: marketplace_redis
    ports:
      - "6379:6379"
    networks:
      - marketplace

  # Memcached (alternative cache)
  memcached:
    image: memcached:alpine
    container_name: marketplace_memcached
    ports:
      - "11211:11211"
    networks:
      - marketplace

  # Elasticsearch for Scout
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: marketplace_elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - marketplace

  # Laravel Horizon (Queue Worker)
  horizon:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketplace_horizon
    command: php artisan horizon
    volumes:
      - ./src:/var/www/html
    depends_on:
      - redis
      - mysql
    networks:
      - marketplace

  # Additional Queue Worker (for specific queues if needed)
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketplace_queue
    command: php artisan queue:work --tries=3
    volumes:
      - ./src:/var/www/html
    depends_on:
      - redis
      - mysql
    networks:
      - marketplace

  # Scheduler (Laravel Cron)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: marketplace_scheduler
    command: /bin/sh -c "while [ true ]; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
      - redis
    networks:
      - marketplace

  # phpMyAdmin (optional, for development)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: marketplace_phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: ${DB_USERNAME:-marketplace}
      PMA_PASSWORD: ${DB_PASSWORD:-secret}
    depends_on:
      - mysql
    networks:
      - marketplace

  # Redis Commander (optional, for development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: marketplace_redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - marketplace

networks:
  marketplace:
    driver: bridge

volumes:
  mysql_data:
  elasticsearch_data: